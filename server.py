import socket
from pynput import keyboard
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST = '79.137.184.21'  # –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≤—Å–µ—Ö –∞–¥—Ä–µ—Å–æ–≤
PORT = 8000      # –ü–æ—Ä—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–∫–µ—Ç–∞
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((HOST, PORT))
server_socket.listen()

print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {HOST}:{PORT}")

clients = []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –∫–ª–∏–µ–Ω—Ç–∞–º
def broadcast(message):
    for client in clients:
        try:
            client.send(message.encode())
        except:
            clients.remove(client)

# –ü—Ä–∏–Ω—è—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
def accept_clients():
    while True:
        client, addr = server_socket.accept()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–ª–∏–µ–Ω—Ç: {addr}")
        clients.append(client)

# –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
threading.Thread(target=accept_clients, daemon=True).start()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à
def on_press(key):
    try:
        if key.char == 'm':  # –ö–ª–∞–≤–∏—à–∞ 'M'
            broadcast('PLAY')
            print("üéµ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: PLAY")
        if key == keyboard.Key.esc:  # –ö–ª–∞–≤–∏—à–∞ 'Esc'
            broadcast('STOP')
            print("‚èπÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: STOP")
            return False  # –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å
    except AttributeError:
        pass

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
print("–ù–∞–∂–º–∏—Ç–µ 'M' –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º—É–∑—ã–∫–∏ —É –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ 'Esc'.")

# –ó–∞–ø—É—Å–∫ —Å–ª—É—à–∞—Ç–µ–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
with keyboard.Listener(on_press=on_press) as listener:
    listener.join()

server_socket.close()
